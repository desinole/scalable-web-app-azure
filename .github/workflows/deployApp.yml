on:
  push:
    branches:
      - main
    paths:
      - 'app/**'

  workflow_dispatch:

env:
  CONFIGURATION: release

name: App Deploy
jobs:
  build:
    name: 'CI'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'

    - name: Restore
      run: dotnet restore app/wordyapi/wordyapi.csproj
    
    - name: Build
      run: dotnet build app/wordyapi/wordyapi.csproj --configuration ${{ env.CONFIGURATION }} --no-restore

  docker_build_push_acr:
    name: 'Docker Build and Push to ACR'
    runs-on: ubuntu-latest
  
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
  
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Docker Login'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.AZURE_CLIENT_ID }}
        password: ${{ secrets.AZURE_CLIENT_SECRET }}
    - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/wordyapi:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/wordyapi:${{ github.sha }}

    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'wapp-xpirits4m5qo5xd3f4a'
        images: '${{ secrets.REGISTRY_LOGIN_SERVER }}/wordyapi:${{ github.sha }}'